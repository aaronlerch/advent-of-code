#!/usr/bin/env ruby

require 'curses'
require_relative 'map'
require_relative 'display_helper'

STEPS=100
TIME_PAUSE=0.01
INPUT_FILE="input.txt"
HIGHLIGHT_STEPS=false

PAUSE_FOR_NOTHING=0
PAUSE_FOR_TIME=1
PAUSE_FOR_USER=2

# global flags
PAUSE_LEVEL=PAUSE_FOR_NOTHING
STEP_PAUSE_LEVEL=PAUSE_FOR_NOTHING

begin
    DisplayHelper.init

    def do_pause(pause_type=PAUSE_LEVEL)
        print_map
        if pause_type == PAUSE_FOR_USER
            result = Curses.getch
            exit if result == 'q' # enable the user to exit anytime without needing an interrupt
        elsif pause_type == PAUSE_FOR_TIME
            sleep TIME_PAUSE
        end
    end

    def substep(msg=nil)
        @step_desc = msg
    end

    def print_map
        DisplayHelper.draw do
            Curses.setpos(0, 0)
            Curses.addstr ">>> STEP #{@current_step}"
            # Curses.setpos(1, 0)
            # blank = " " * 100
            # Curses.addstr blank
            # Curses.setpos(1, 0)
            # Curses.addstr ">>> SUB-STEP: #{@map.step_description || @step_desc}"

            offset = 2
            @map.each do |x,y,value|
                Curses.setpos(offset + x, y)
                if value >= Map::FLASH_THRESHOLD
                    value = "*"
                end
                color = DisplayHelper.color_for_value(value)
                if HIGHLIGHT_STEPS && @map.highlighted == [x,y]
                    color = DisplayHelper::HIGHLIGHT
                end
                DisplayHelper.with_color(color) do
                    Curses.addstr value.to_s
                end
            end

            Curses.setpos(13, 0)
            Curses.addstr "Flashes: #{@map.flash_count}"
        end
    end

    input = File.readlines(INPUT_FILE).map(&:chomp)
    @map = Map.new input, method(:print_map), method(:do_pause)

    @current_step = 0
    @step_desc = ""

    Curses.getch

    substep "initial state"
    print_map
    do_pause STEP_PAUSE_LEVEL

    (1..STEPS).each do |i|
        @current_step += 1
        @map.step
        print_map
        do_pause STEP_PAUSE_LEVEL
    end

    Curses.getch
ensure
    DisplayHelper.close
end
